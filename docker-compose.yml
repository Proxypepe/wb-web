version: "2.4"
services:

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    container_name: frontend
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    container_name: postgres
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: alex
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: wb
    ports:
      - "17200:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s

  nats:
    container_name: nats-streaming
    image: nats-streaming
    command: ["-p", "4222", "-m", "8222", "--store", "file", "--dir", "/data"]
    restart: always
    ports:
      - "4222:4222" # для обмена сообщениями
      - "8222:8222" #  для мониторинга и администрирования
    volumes:
      - ./data/nats:/data

  redis:
    container_name: redis
    image: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data